<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="Viktor-MBP-2.lan" name="adpro.StateSpec" tests="11" errors="0" failures="1" skipped="0" time="0.366" timestamp="2021-10-04T19:44:31">
          <properties>
      <property name="java.specification.version" value="15"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://openjdk.java.net/"/><property name="sun.boot.library.path" value="/usr/local/Cellar/openjdk/15.0.1/libexec/openjdk.jdk/Contents/Home/lib"/><property name="sun.java.command" value="/usr/local/Cellar/sbt/1.4.6/libexec/bin/sbt-launch.jar"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2020-10-20"/><property name="java.home" value="/usr/local/Cellar/openjdk/15.0.1/libexec/openjdk.jdk/Contents/Home"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="Zero based"/><property name="line.separator" value="
"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="15.0.1+9"/><property name="user.name" value="viki"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/Users/viki/Library/Caches/JNA/temp/jna12477355833924195663.tmp"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="/var/folders/z5/cllp1h8x7yv4gp2p80c0f7g40000gn/T/"/><property name="java.version" value="15.0.1"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.library.path" value="/Users/viki/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="java.vendor" value="N/A"/><property name="scala.ext.dirs" value="/Users/viki/.sbt/0.13/java9-rt-ext-n_a_15_0_1"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="java.class.path" value="/usr/local/Cellar/sbt/1.4.6/libexec/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Europe/Prague"/><property name="java.vm.specification.version" value="15"/><property name="os.name" value="Mac OS X"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="CZ"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/Users/viki"/><property name="user.language" value="cs"/><property name="swoval.tmpdir" value="/Users/viki/.sbt/1.0"/><property name="jline.esc.timeout" value="0"/><property name="path.separator" value=":"/><property name="os.version" value="11.5.2"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="jna.platform.library.path" value="/usr/lib:/usr/lib"/><property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/><property name="user.dir" value="/Users/viki/Desktop/UNI/MASTER_cbs/3rdSemester/Advanced_Programming_Scala/2021-adpro/050-state"/><property name="os.arch" value="x86_64"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="15.0.1+9"/><property name="java.class.version" value="59.0"/>
    </properties>
          <testcase classname="adpro.StateSpec" name="Exercise 11 (random_integers) Your random integers have the right type" time="0.013">
                      
                    </testcase><testcase classname="adpro.StateSpec" name="Exercise 11 (random_integers) Your random integers do not throw exceptions (esp. '???)" time="0.011">
                      
                    </testcase><testcase classname="adpro.StateSpec" name="Exercise 11 (random_integers) Your random integers seem random" time="0.189">
                      
                    </testcase><testcase classname="adpro.StateSpec" name="Exercise 10 (state2stream) constant streams" time="0.045">
                      
                    </testcase><testcase classname="adpro.StateSpec" name="Exercise 9 unit" time="0.005">
                      
                    </testcase><testcase classname="adpro.StateSpec" name="Exercise 9 map identity law" time="0.012">
                      
                    </testcase><testcase classname="adpro.StateSpec" name="Exercise 9 associativity flatMap" time="0.003">
                      
                    </testcase><testcase classname="adpro.StateSpec" name="Exercise 9 flatMap identity law" time="0.071">
                      
                    </testcase><testcase classname="adpro.StateSpec" name="Exercise 9 map vs flatMap+unit relation" time="0.003">
                      
                    </testcase><testcase classname="adpro.StateSpec" name="Exercise 9 map2 should give an equivalent intDouble to direct implementation" time="0.01">
                      <failure message="TestFailedException was thrown during property evaluation.
  Message: ((384748,0.5400352240540087),SimpleRNG(76003201113169)) did not equal ((-384749,0.5400352240540087),SimpleRNG(76003201113169))
  Location: (StateSpec.scala:141)
  Occurred when passed generated values (
    rng = SimpleRNG(-1)
  )" type="org.scalatest.exceptions.GeneratorDrivenPropertyCheckFailedException">org.scalatest.exceptions.GeneratorDrivenPropertyCheckFailedException: TestFailedException was thrown during property evaluation.
  Message: ((384748,0.5400352240540087),SimpleRNG(76003201113169)) did not equal ((-384749,0.5400352240540087),SimpleRNG(76003201113169))
  Location: (StateSpec.scala:141)
  Occurred when passed generated values (
    rng = SimpleRNG(-1)
  )
	at org.scalatestplus.scalacheck.CheckerAsserting$$anon$2.indicateFailure(CheckerAsserting.scala:251)
	at org.scalatestplus.scalacheck.CheckerAsserting$$anon$2.indicateFailure(CheckerAsserting.scala:238)
	at org.scalatestplus.scalacheck.UnitCheckerAsserting$CheckerAssertingImpl.check(CheckerAsserting.scala:160)
	at org.scalatestplus.scalacheck.ScalaCheckDrivenPropertyChecks.forAll(ScalaCheckDrivenPropertyChecks.scala:950)
	at org.scalatestplus.scalacheck.ScalaCheckDrivenPropertyChecks.forAll$(ScalaCheckDrivenPropertyChecks.scala:919)
	at adpro.StateSpec.forAll(StateSpec.scala:26)
	at adpro.StateSpec.$anonfun$new$41(StateSpec.scala:138)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.freespec.AnyFreeSpecLike$$anon$1.apply(AnyFreeSpecLike.scala:406)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at org.scalatest.freespec.AnyFreeSpec.withFixture(AnyFreeSpec.scala:1739)
	at org.scalatest.freespec.AnyFreeSpecLike.invokeWithFixture$1(AnyFreeSpecLike.scala:404)
	at org.scalatest.freespec.AnyFreeSpecLike.$anonfun$runTest$1(AnyFreeSpecLike.scala:416)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)
	at org.scalatest.freespec.AnyFreeSpecLike.runTest(AnyFreeSpecLike.scala:416)
	at org.scalatest.freespec.AnyFreeSpecLike.runTest$(AnyFreeSpecLike.scala:398)
	at org.scalatest.freespec.AnyFreeSpec.runTest(AnyFreeSpec.scala:1739)
	at org.scalatest.freespec.AnyFreeSpecLike.$anonfun$runTests$1(AnyFreeSpecLike.scala:475)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:413)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:390)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:427)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:396)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:475)
	at org.scalatest.freespec.AnyFreeSpecLike.runTests(AnyFreeSpecLike.scala:475)
	at org.scalatest.freespec.AnyFreeSpecLike.runTests$(AnyFreeSpecLike.scala:474)
	at org.scalatest.freespec.AnyFreeSpec.runTests(AnyFreeSpec.scala:1739)
	at org.scalatest.Suite.run(Suite.scala:1112)
	at org.scalatest.Suite.run$(Suite.scala:1094)
	at org.scalatest.freespec.AnyFreeSpec.org$scalatest$freespec$AnyFreeSpecLike$$super$run(AnyFreeSpec.scala:1739)
	at org.scalatest.freespec.AnyFreeSpecLike.$anonfun$run$1(AnyFreeSpecLike.scala:519)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:535)
	at org.scalatest.freespec.AnyFreeSpecLike.run(AnyFreeSpecLike.scala:519)
	at org.scalatest.freespec.AnyFreeSpecLike.run$(AnyFreeSpecLike.scala:518)
	at org.scalatest.freespec.AnyFreeSpec.run(AnyFreeSpec.scala:1739)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:318)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:513)
	at sbt.TestRunner.runTest$1(TestFramework.scala:140)
	at sbt.TestRunner.run(TestFramework.scala:155)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:318)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:278)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:318)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:318)
	at sbt.TestFunction.apply(TestFramework.scala:330)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:435)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(Transform.scala:46)
	at sbt.std.Transform$$anon$4.work(Transform.scala:68)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:282)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:23)
	at sbt.Execute.work(Execute.scala:291)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:282)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:265)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.scalatest.exceptions.TestFailedException: ((384748,0.5400352240540087),SimpleRNG(76003201113169)) did not equal ((-384749,0.5400352240540087),SimpleRNG(76003201113169))
	at org.scalatest.matchers.MatchersHelper$.indicateFailure(MatchersHelper.scala:344)
	at org.scalatest.matchers.should.Matchers$ShouldMethodHelperClass.shouldMatcher(Matchers.scala:6778)
	at org.scalatest.matchers.should.Matchers$AnyShouldWrapper.should(Matchers.scala:6834)
	at adpro.StateSpec.$anonfun$new$42(StateSpec.scala:141)
	at org.scalatestplus.scalacheck.ScalaCheckDrivenPropertyChecks.liftedTree8$1(ScalaCheckDrivenPropertyChecks.scala:930)
	at org.scalatestplus.scalacheck.ScalaCheckDrivenPropertyChecks.$anonfun$forAll$4(ScalaCheckDrivenPropertyChecks.scala:929)
	at scala.Function1.$anonfun$andThen$1(Function1.scala:85)
	at org.scalacheck.Prop$.$anonfun$forAllShrink$2(Prop.scala:765)
	at org.scalacheck.Prop$.secure(Prop.scala:475)
	at org.scalacheck.Prop$.result$1(Prop.scala:765)
	at org.scalacheck.Prop$.$anonfun$forAllShrink$1(Prop.scala:804)
	at org.scalacheck.Prop$.$anonfun$apply$1(Prop.scala:308)
	at org.scalacheck.PropFromFun.apply(Prop.scala:21)
	at org.scalacheck.Test$.workerFun$1(Test.scala:424)
	at org.scalacheck.Test$.$anonfun$check$1(Test.scala:453)
	at org.scalacheck.Test$.$anonfun$check$1$adapted(Test.scala:453)
	at org.scalacheck.Platform$.runWorkers(Platform.scala:40)
	at org.scalacheck.Test$.check(Test.scala:453)
	at org.scalatestplus.scalacheck.UnitCheckerAsserting$CheckerAssertingImpl.check(CheckerAsserting.scala:90)
	... 64 more
</failure>
                    </testcase><testcase classname="adpro.StateSpec" name="Exercise 9 A simple fixed scenario for sequence" time="0.004">
                      
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>