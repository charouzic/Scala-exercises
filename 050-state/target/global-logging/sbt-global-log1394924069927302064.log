[0m[[0m[0mdebug[0m] [0m[0m> Exec(__runWatch console0, Some(12f5e56d-4b98-406f-868b-69de137387dd), Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(__preWatch console0, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(test, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Test / test[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /Users/viki/Desktop/UNI/MASTER_cbs/3rdSemester/Advanced_Programming_Scala/2021-adpro/050-state/target/scala-2.13/classes ...[0m
[0m[[0m[0minfo[0m] [0m[0m[32mStateSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mExercise 11 (random_integers)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Your random integers have the right type[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- Your random integers do not throw exceptions (esp. '???) *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  An unexpected scala.NotImplementedError was thrown. (StateSpec.scala:42)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- Your random integers seem random *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  scala.NotImplementedError: an implementation is missing[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at scala.Predef$.$qmark$qmark$qmark(Predef.scala:345)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at adpro.State$.random_integers$lzycompute(State.scala:211)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at adpro.State$.random_integers(State.scala:211)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at adpro.StateSpec.$anonfun$new$5(StateSpec.scala:46)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.freespec.AnyFreeSpecLike$$anon$1.apply(AnyFreeSpecLike.scala:406)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mExercise 10 (state2stream)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- constant streams *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  NotImplementedError was thrown during property evaluation.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Message: an implementation is missing[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Occurred when passed generated values ([0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m      n = 0, // 32 shrinks[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m      m = 0 // 1 shrink[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    )[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mExercise 9[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- unit[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- map identity law[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- associativity flatMap[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- flatMap identity law[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- map vs flatMap+unit relation[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- map2 should give an equivalent intDouble to direct implementation *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  TestFailedException was thrown during property evaluation.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Message: ((1455508718,0.5612372495234013),SimpleRNG(202487855834391)) did not equal ((-1455508719,0.5612372495234013),SimpleRNG(202487855834391))[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Location: (StateSpec.scala:141)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Occurred when passed generated values ([0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m      rng = SimpleRNG(-2362357975868633643)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    )[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- A simple fixed scenario for sequence[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mRNGSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mExercise 8 (flatMap, nonNegativeLessThan)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- flatMap associativity law[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- flatMap identity law[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- nonNegativeLessThan (n) yields numbers from 0 to n[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mExercise 7 (sequence)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not throw exceptions (including ???)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- A simple fixed scenario[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- New implementation of ints[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mExercise 6 (map2)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- map2 should not throw exceptions (in particular '???' is removed)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- map2 should give an equivalent intDouble *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  TestFailedException was thrown during property evaluation.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Message: ((384748,0.5400352240540087),SimpleRNG(76003201113169)) did not equal ((-384749,0.5400352240540087),SimpleRNG(76003201113169))[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Location: (StateSpec.scala:275)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Occurred when passed generated values ([0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m      rng = SimpleRNG(-1)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    )[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  + You may need to sync your intDouble with map2[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    for this to pass, if you did something unusual[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    in either. [0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mExercise 5 (_double)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- _double should not throw exceptions (in particular '???' is removed)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- _double and double should behave the same[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  + You have to check yourself that you are using map,[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m    and NOT using recursion. [0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mExercise 4 (ints)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- ints should not throw exceptions (in particular '???' is removed)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- your implementation should compile (so you got the return type right)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- returned lists should have the specified length[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- [ints (42)] Values generated one after another should be different[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mExercise 3 (intDouble,DoubleInt)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- the implementations should compile (so you got the return type right)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- intDouble should not throw exceptions (in particular '???' is removed)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- doubleInt should not throw exceptions (in particular '???' is removed)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- [intDouble] Values generated one after another should be different[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- [doubleInt] Values generated one after another should be different[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mExercise 2 (double)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- generated doubles are in the interval [0,1)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- [double] Values generated one after another should be different[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mExercise 1 (nonNegativeInt)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- generated integers are non-zero[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- [nonNegativeInt] Values generated one after another should be different[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 845 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 34[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 2, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 29, failed 5, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m*** 5 TESTS FAILED ***[0m[0m
[0m[[0m[31merror[0m] [0m[0mFailed tests:[0m
[0m[[0m[31merror[0m] [0m[0m	adpro.RNGSpec[0m
[0m[[0m[31merror[0m] [0m[0m	adpro.StateSpec[0m
[0m[[0m[31merror[0m] [0m[0m(Test / [31mtest[0m) sbt.TestsFailedException: Tests unsuccessful[0m
[0m[[0m[31merror[0m] [0m[0mTotal time: 2 s, completed 3. 10. 2021 12:13:06[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtPopOnFailure, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(__postWatch console0, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(__waitWatch console0, None, None)[0m
[0m[[0m[0minfo[0m] [0m[0mshutting down sbt server[0m
