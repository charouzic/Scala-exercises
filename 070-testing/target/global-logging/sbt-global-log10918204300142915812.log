[0m[[0m[0mdebug[0m] [0m[0m> Exec(__runWatch console0, Some(5c58cb2c-dfff-4bc2-becb-25ee3fe29db7), Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(__preWatch console0, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(test, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Test / test[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /Users/viki/Desktop/UNI/MASTER_cbs/3rdSemester/Advanced_Programming_Scala/2021-adpro/070-testing/target/scala-2.13/test-classes ...[0m
[0m[[0m[0minfo[0m] [0m[0m[32mStreamSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mheadOption[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- returns None on an empty Stream (01)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- returns the head of a singleton stream packaged in Some (02)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- returns the head of random stream packaged in Some (02)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mtake[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- take(n) does not force the (n+1)st head ever[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mdrop[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- s.drop(n) does not force any of the dropped elements heads[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mmap[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mappend[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- append to stream does not change its head[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- appending empty stream should result in the same stream[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- append should terminate when appending infinite stream[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- appending two empty streams should result in empty stream[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- by appending two streams of size k and l we get a stream of size (k + l) *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  TestFailedException was thrown during property evaluation.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Message: 13 did not equal 14[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Location: (StreamSpec.scala:166)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Occurred when passed generated values ([0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m      arg0 = Cons(fpinscala.laziness.stream00.Stream$$$Lambda$14986/0x0000000801f99f70@165247d5,fpinscala.laziness.stream00.Stream$$$Lambda$14987/0x0000000801f9a230@2602e20b),[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m      arg1 = Cons(fpinscala.laziness.stream00.Stream$$$Lambda$14986/0x0000000801f99f70@6c50cd4,fpinscala.laziness.stream00.Stream$$$Lambda$14987/0x0000000801f9a230@358dfc2b)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    )[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 374 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 10[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 1, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 9, failed 1, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m*** 1 TEST FAILED ***[0m[0m
[0m[[0m[31merror[0m] [0m[0mFailed tests:[0m
[0m[[0m[31merror[0m] [0m[0m	fpinscala.laziness.StreamSpec[0m
[0m[[0m[31merror[0m] [0m[0m(Test / [31mtest[0m) sbt.TestsFailedException: Tests unsuccessful[0m
[0m[[0m[31merror[0m] [0m[0mTotal time: 1 s, completed 26. 10. 2021 11:55:34[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtPopOnFailure, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(__postWatch console0, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(__waitWatch console0, None, None)[0m
